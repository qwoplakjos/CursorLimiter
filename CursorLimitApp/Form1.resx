<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACjEgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABJdSURBVHja7d0LUNV13sfxPxwOoIKggCgXAQ3TEIuLpgVyQLFSRFHMJ/Cuo111msFL
        u5qI6zReAp9nmmctpzAnL7hpOmqZF5zNnbxUQi3a7lTbZFZqZYp3VH7P93ceazc4F0REz+H9nvlMaQZH
        PP8X/wPH/zEMIiIiIiIiImoxqf+fWebNGHP5eambBMBTVir7u6ySMeayq5IV3ywAJtmHMsUYc/ltacwZ
        wN/4wDHmFnsHABgDAABgDAAAgDEAAADGAKAxAOyXvShbwBi745sv+6w5AVim/v2EIcbYnd/q5gTg5p5Y
        QES3+5m7bwEAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAAABEAAAARAAAAEQAA
        ABEAAAARAAAAEQAQEQAQEQAQEQDcrnJzc428vDzDYrEYKSkpRmpqqs09+OCDRt++fY22bdsaFRUV3DsI
        ANwBgHHjxhmTJ0/2zM7O9hs6dGjgsGHDAuXffzf9c4MGDQpMS0szJyYmAgABgLsAMHjwYCMnJ6eTHNjr
        4uLivuvZs+exuouPjz/WvXv3bxMSErL0/wMABABuAsADDzxgPPzww5Fyar9H30QPDw+769q161gAIABw
        MwAeeuihSH9//92Gk9dIAAACAAAAAAIAACACAAAgAgAAIAIANwcgJiZmjP5/KisrrQg4GhEAuBkAffv2
        fVYp5eFo+m2+88473HsIANwNgF69en0eHx+/8J577vmjrcXGxv4hPT3dUlRU5MHdhwDAzQBwNk9PT5WW
        lrZy1apVJu4+BAAtDACTyVQ7YMCAFWVlZQBAAAAARAAAAEQAAABEAAAARAAAAEQA4FYAyGotFsv/6rcb
        FBTkdEQA4EIAjBkzRhUXF6ulS5fa3LJly9S0adM+CwkJWd6+fftiO/sf2XgZ9zACAFcCYMuWLcpZRUVF
        ytvbW3l5eTnaJhn3MAIAVwJg06ZNDg/+a9euqYULF1qfEejkbW3g7kUA4GYA1NTUWM8AAIAAoAUCcPXq
        Vc4ACAAAAAAIAAAAAAgAAAAACACMlvNFQP0iIk7eVpmz2xUcHGysWrXKWLp0KfdEAgBXAEB/G3Djxo1q
        5MiRasSIETaXk5Oj8vLyjsyZM6dw9uzZC2xt1qxZf5o/f352VVWV14YNnCwQALgEAL+eBVRXV1t37ty5
        ert8+bIqKyur9fPzu9q6dWub8/X1rU1NTf147dq19y5fvpx7IgGAqwDQkPQzCs1ms7MLkB5Zs2ZNXElJ
        CfdEAgB3AmDz5s3Wpws7AaBKALgPAAgAAIAIAACACAAAgAgAAIAIAFwQAP12nD1ZqE+fPlVbt269NyMj
        w+5t9/PzM0JDQ7m6EAGAKwGwb98+lZ6erl9FyPpPi8Xy2/SPU1NT1ejRo78aOnTo4/J+E2XJtiYAJAgA
        PgBAAOBCANTW1lr/3oC93ThLqA0JCbkq77fGzq4KAD8LANEAQADgQgA09OsEAoDD2yMAVAsAMQBAAAAA
        RAAAAEQAAABEAAAARAAAAEQA4EoA6PfVvn17h7enVatWZ9u0aRM5cOBAIz8/3+ZycnKMxx57zMjOzuYe
        TQDgKgDs3bvX+qSgXr16qfvvv9/mEhMTLwwfPjx3ypQpD02aNOlhG0sZPXp0YlJSkid3ZwIAFwJAX1Go
        qqpKHT58WFVUVPxulZWV6tNPP9XPKLzeu3fvb8PDw7+OjIyst4iIiG/kn3996aWXOuzatYt7NAGAqwDQ
        UCSioqIc3maz2fzN8uXLY+SMgns0AYA7AXD69GkVHR3t8DZ7e3t/LQBEAwABAAAQAQAAEAEAABABAAAQ
        AYCLAtCA7wL8q6SkpPOhQ4eMiooKpyMCABcB4MyZM6pfv36qY8eOKiwsrN46deqkYmNjfyouLs7ZsWOH
        /7Zt2wLqbvv27QGbN2/2W7FihenVV1/lXk8A4CoA6NciPHr0qPrkk0+sTxiqO/2kofLy8tr09PRjciaw
        38fH50DdyUOEA8HBwR8lJSXlybjXEwC4CgAN6cSJE/opww5/X/rvHKSkpMyRca8nAHAnAL777jsln9kd
        /r6CgoL0hUhnybjXEwAAABEAAAABAAAAAAEAAAAAAQAAuDMA+rsAkZGRDRoBAAC4QD/88IP1pcZ8fHz0
        JcTqTf+8ftKQxWL5o/weTXFxca0czCwz9AgAAMAFunTpktqzZ49au3atWr9+vVq3bt3vpn9O/7exY8d+
        Jh+DMjkb+IudvS37L5mJi5ACAAC4UTU1NWratGnK2e9ftlBm5tAAAABomQAUAQAAAICbdeXKFTV16lQA
        IABoqWcAAEAAwEMAACAA4CEAABAA8BCg/hbITLNmzTJKSkpsTl9U5IMPPuDoAQAAcCUApk+fbn1SkHwc
        7C48PLykuLg4qqysLGzdunU2t23bttZKKY4eAAAAV+n69etq9+7davHixerll1+2uxdeeOHbyZMnH5g4
        ceL+8ePH19uECRM+LCgoeH7FihW8FiEAAICrfR3g3Llz6vz58zZ34cIFtWzZMuv1B9u1a6cCAwPrLTg4
        WOXk5Hy4ZMkSbw4fAAAAN0tO//Vlxu1+fEwmk8rKyqqUMwkAAAAAcEcA9NcJ7H18vLy8AAAAAAAAAAAA
        AAAACAAAAAAIAAAAAAgAAMCV098GNJvNDr8LMGTIkAr5pXafB+Dh4WH4+fkZUVFRXFoMAADAldq1a5d6
        +umnHe7555//xtfXd4p8vCbYmgAwSQDIEgD8AQAAAMCFunr1qt0nCv26lStXXpeHAtXy8bI5AeCiAFAu
        AEQDAAAAgJtVWlpq/VqAvY+hAKAEgIMCQBcAAAAAaJkAHAAAAAAAAOAoAwAAAAACAAAAAAIAAGgZAHTu
        3BkAAAAAWiIAAQEBB7p16xYjCBht27atN/mzMDp27GiMGjXK+mdUUVHB0QgAANCYrl27po4dO6Y+//zz
        276jR4+qwsJC6zMCHQHQoUOHf6Snp0/JysoaPGTIkKy6Gzx48NDMzMykRx991Ds5ORkAAAAAGtuJEydU
        bm6ukt9ns0xfMcjZx9Hb2/taSEjIefm11aGhobZ2MSoq6i8jR44M4wwAAADgFmrIy4PfjZOHAu/JQ4DO
        AAAAAAAAHI0AAAAAQAAAAABAAAAAAEAAAAAAQAAAAE0BgP4e/V0EwPsCQBQAAIDbAaBfZeerr75SX375
        pc198cUX6tSpU80GgKenp37tv9N+fn7/at269dd3eq1atToWFBS0Kjc3l+cBAID7AVBeXm49KPUTZxIS
        EuqtZ8+easmSJdbX7GsOAAICAlRiYuJ/R0dHx4eHhydFRETc0XXq1ClJbsc9I0eO9AYAAHA7APTb0Z91
        Hb2v5557zvo03uYAQD7bqv79+8/s27ev9UKdd3phYWGGQGAIAAYAAIDbAbB582aHr7Gnp1+uuzkBSE1N
        nSXjXk8AAABEAAAABAAAAAAEAAAAAAQAANAUbdmypUEA1NbWNgkA+luLjt5Xu3btNAAze/fu3eCv1BMA
        AICNLl26pH7++Wf1008/2dzZs2fV+vXrLwkA35tMphNeXl71Ju/rhABwXj8ZyNHbOnPmjNPnCpw8eVK/
        Xp/q1KmTCgsLqzf98z169FCZmZmL5EwgJDo6OtzB2soMPQIAAKiT/oytP7uPGTNG5eXl2Vx+fr7KycnZ
        Fxwc/FhUVNSwmJiY4XUnB+YQeRtrJ06caPft6M2ZM0f98ssvDm/TlStX1EcffaR27Nih3n///XrbuXOn
        eu+999SECRO+8PX13ak/Dna2RzZBZtLX7CMAAIA66dfOW7hwodMn+cjKnN2u/v37zwsMDHT4du677z71
        /fff3/LDBA3XtGnTfntasIMtkpllHB0AAAC2ACgqKmoIABt8fHysz3CzNYvFYqSkpLyoH5s7ejv61F0/
        xr/VampqfgPAyYpkZg4NAACAWzsD2ODoNumvxsucAqDPAACAAMAFzwDuJgD01wmmTp0KAAQAtwKA/r49
        ZwAEAC0UAH0gcQZAANDCzwAacGUdzgAIAFwNgDVr1lgPlosXL9pcdXW1FQA5cGsDAwPtTcnKZHcVAJwB
        EAA4OQDS0tKsnyn1wWJvTz311H75dbNSUlJm2tlsWbaMhwAEAK4EgHHjwpn25uXlVTtw4MBXd+7caT5y
        5Iink/EQgADA1QBwNJPJVJuRkbHi7bffNuXn5xvOxhkAAYCbATBgwIAVZWVlplu5TZwBEAAAAGcABAAA
        AAAEAADAQwACAAAwbsNfB26qMwAvLy8jKyvLWLx4MUcPALglALWy6/YmAFwTAP7cRADMuwGA3fcnAFw/
        fvy49SDWVwayt4acATz55JPW36McxDYnvzf9z4Vms9lHfp2nrcl/9xQAPAEAANwSAF9f3+2enp763r3E
        1uQgWZKRkTFCAPBsAgAGCgDF9t6Xntz2P8vBVv3KK68oW1u+fLlatWqVunz5skMANBIbN260XmFowYIF
        9VZYWKjmzZunr3S0y8fHZ7a87wLZzLoTAGYJAOPlNpk4fADA7QDo0qXL2Bv/m4etCQAeAoCxYcMGowkA
        MAQAD3vvS/+6Z599NlIOyGP6AqO2pv9SUvfu3Z1eNuw/rwzkKP16hfJ2a2+cCdWbPlMQACoEAG8OHwBw
        OwC6du1qBeBueK26GTNmGNOnT48QdI45us2xsbHWi4c2RcXFxUrAsfu+bgBQCQAAAAAtEACz2ayGDh1a
        KWcKAAAAANDSANAPO4YPH14pvw4AAAAAOAMgAAAAvgZAAOAOAPz6XQAAAAAAcBMAkpOT9YtwRAYHB+/V
        d25fX1+76969+zgAAAAAcCMAcnNzjSeeeCIoMzPzpbS0tL0Wi2W3ne3Jzs62eHh4AAAAAIC7APDGG28Y
        r7/+umdpaWmQLEIWbm/ya31Xr14NAAAAAO4CQElJyU3vbggACABacABAAAAAAEAAAAAAQAAAAABAAAAA
        AEAA4ObJwa8XKQAcdwbAuXPnmgQAfT0AfZDbe1/6+gNDhgyp2Ldvn1dCQoL1WZZ1p3++X79+xiOPPGIM
        GjSIP0gAAIDGNHPmTKOgoCA0MDBwu7+//2HZx3XXpk2bj+Pj46v27t17/dChQ+rgwYM2d/jw4QZdNGTr
        1q0qJydHf5a3uezsbPXMM8/8s0ePHhZ5v/aW3qdPn8SBAwe2GjBgAH+QAAAAjamwsNCYP3++V7du3SK7
        du0aI4uuuy5dunTu1atXRlxc3MWoqChla5GRkSo5OVmVl5c7BUBfWuzUqVPq5MmTdvfaa69dkYcJ35rN
        5uO25u3tfaJdu3Zb5fZ1ltvHHyQAAEBjmjdvnjF37lwjOjrakIPY5iIiIvR/j5WzhAuOHiZ06NBBbd++
        vUkeJpSWllovIGo4eG1FPz+/g507d+6ibyMBAADcpvQBJp9l723fvr1DADp27NikADj6OsENAA7I2QcA
        AAAAAAABAAAAAAEAAAAAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAAQABAAEAGeHh
        4fqvA98bGBh40REAoaGh6t13322Wvw6s16ZNm4Ny8HfRt48AAABuU2FhYfqaALEhISEn27ZtWx0QEFBv
        /v7+1bGxsRc2bdp0/fTp0+rHH3+8pa1cufK6nHHYfF83djEoKKhcDv5offsIAADgNjV69Gj9uocBI0aM
        GCubID+ut1GjRo2bMWPGi1OnTv1BX9Jr2LBhjZ6+XJi8rW/y8vKm2HpfNzZJliXz17ePAAAAblP5+fnG
        2LFjjccff9w6/eO6KygoMNatWxefmJj4D8PJy6M7m358ry8KWllZ6WnrfdkaAQAA3MH0ax2++eabDyQn
        J98yAFwWHAAAAAAAAAAAAAAIAAAAAAgAAAAACAAA4O4G4J9NBMCnAAAAAOBCAKxevTouKSnpkPzwnOxs
        YycAnB88ePDfFi1aBAAAAACuAsBbb73ln5CQkCE/HCHLaewEgBGZmZkZc+fO9eQjCwAA4DoAWF+191YT
        AAwBwPqSZQQAAEAEAABABAAAQAQAAEAEAABABAAAQAQAAEAEAABABABEBABEBABEBABEBABEBABEBABE
        BABEBABEBABEBABEBABEBABEBABEBABEBABEBABEBABEBABEBABEAAAARAAAAEQA0BwALFP/fseMsTu/
        1c0JwH7Zi7IFjLE7vvmyz5oTAMaY6wwAGAMAAGAMAACAMQAAAMYAwCYAJtmHfOAYc4ttacwZQKns77JK
        xpjLruqmn7h344kFZpk3Y8zl58Uzd4mIiIiIiIjoP/s/SNZSoHp8gzEAAAAASUVORK5CYII=
</value>
  </data>
</root>